<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Qxun.App.Weistone</name>
    </assembly>
    <members>
        <member name="T:Qxun.App.Weistone.ActionFilter.LevelAccountAttribute">
            <summary>
            判断是否是上下级的Attribute
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ActionFilter.WhiteListFilterAttribute">
            <summary>
            非登录状态的白名单过滤
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.ActionFilter.WhiteListFilterAttribute.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.ActionFilter.WhiteListFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="P:Qxun.App.Weistone.ActionFilter.WhiteListFilterAttribute.WhiteListAppSettingsKey">
            <summary>
            webconfig中的白名单列表配置节
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.QYApplicationController.QYApplyBinding">
            <summary>
            添加/编辑企业号应用
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.QYApplicationController.IsAccess">
            <summary>
            校验是否有权限访问添加/编辑企业号应用页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.QYApplicationController.GetAesKey">
            <summary>
            生成消息加解密密钥(EncodingAESKey)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.QYApplicationController.GetDetailedWeixinPlat(System.String)">
            <summary>
            获得企业号应用详细内容
            </summary>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.QYApplicationController.QYApplyBindingSubmit(System.String,System.String)">
            <summary>
            添加/编辑企业号应用
            </summary>
            <param name="json"></param>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.QYManagerController.GetQYApplicationList(System.Int32,System.Int32,System.String)">
            <summary>
            得到企业号应用列表
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.QYCredentialController.CredentialManager">
            <summary>
            授权设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.QYCredentialController.GetDetailedCreadential">
            <summary>
            获取AppID和AppSecret
            </summary>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.QYCredentialController.ClientCredentialSubmit(System.String,System.String,System.Boolean)">
            <summary>
            授权
            </summary>
            <param name="plat"></param>
            <param name="corpId"></param>
            <param name="secret"></param>
            <param name="enableQYOauth"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.Login">
            <summary>
            用户登录页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.LoginOn(System.String,System.String)">
            <summary>
            Ajax用户登录校验
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.LoginOut">
            <summary>
            用户登出
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.ChangePwd">
            <summary>
            修改密码页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.ChangePassword(System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="oldpwd"></param>
            <param name="newpwd"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.EditAccount">
            <summary>
            修改用户信息页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.EditAccount(System.String)">
            <summary>
            AJAX用户信息修改提交
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.GetAccountInfo(System.String)">
            <summary>
            AJAX获取用户信息
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountController.SendResetPassword(System.String,System.String)">
            <summary>
            邮件找回密码
            </summary>
            <param name="userName"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="T:Qxun.App.Weistone.Web.Controllers.AccountManagementController">
            <summary>
            帐号管理（所有有关帐号操作的需要判断权限的方法都放在这儿）
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.ChildAccountManage">
            <summary>
            管理帐号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.FreezeAccount(System.String,System.String)">
            <summary>
            冻结帐号
            </summary>
            <param name="AccountId">角色id</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetChildAccountList(System.Int32,System.Int32,System.String)">
            <summary>
            获得帐号列表
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.EditAccountWithId">
            <summary>
            修改帐号信息
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetDetailedAccount(System.String)">
            <summary>
            获得用户详细内容
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetAccountTypeByAccountId(System.String)">
            <summary>
            根据accountId获取上级的可以创建的帐号类型       
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetAllRolesByAccountId">
            <summary>
            获得上级帐号创建的所有角色
            </summary>
            <returns>所有上级帐号创建的角色</returns>        
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.ChildAccount">
            <summary>
            编辑或增加子帐号的页面
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetRolesByCurrentAccount">
            <summary>
            获取当前帐号建的角色
            </summary>
            <returns>当前帐号建的角色</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetCanCreateTypeByAccountId">
            <summary>
            根据当前帐号返回可以创建的帐号类型
            </summary>
            <returns>可以创建的帐号类型</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.ChildAccountRegedit(System.String)">
            <summary>
            增加子帐号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.Role">
            <summary>
            编辑或新增角色de页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetAuthorityConfig(System.String)">
            <summary>
            得到角色的权限设置
            </summary>
            <param name="authorityId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.InsertOrUpdateAuthority(System.String,System.String,System.String)">
            <summary>
            更新或添加角色de处理
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.RoleManagement">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.DeleteRoleByRoleId(System.String)">
            <summary>
            删除角色---里面有帐号就不能删除！！
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.GetRoleList(System.Int32,System.Int32)">
            <summary>
            获取角色列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.Limit(System.String)">
            <summary>
            修改限制的页面
            </summary>
            <param name="AuthorityId">角色id</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.InsertLimit(Qxun.App.Weistone.ViewModels.ViewLimit)">
            <summary>
            新增角色的限制
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.UpdateLimit(Qxun.App.Weistone.ViewModels.ViewLimit)">
            <summary>       
            修改限制
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.ChildAccountPassword">
            <summary>
            管理员修改子帐号密码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.ChangeChildAccountPassword(System.String,System.String)">
            <summary>
            修改子帐号密码
            </summary>
            <param name="id"></param>
            <param name="newpwd"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.AccountManagementController.EditAccount(System.String)">
            <summary>
            修改帐号信息
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Controllers.PluginCenterController">
            <summary>
            功能插件管理
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.PluginCenterController.PluginCenterList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.PluginCenterController.StartOrEndFunctional(System.String,System.Boolean)">
            <summary>
            开启或关闭功能
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Controllers.WechatOfficialAccountManagerController.GetWeChatOfficialAccountList(System.Int32,System.Int32,System.String)">
            <summary>
            得到公众号列表
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Entities.AutoBindingParamsEntity">
            <summary>
            用于自动绑定的参数实体
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Entities.SelectEntity">
            <summary>
            用于下拉选择的实体
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.Account">
            <summary>
            用户帐号表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.HasAutorityAccountIds">
            <summary>
            有权限访问的帐号ID列表（含自己及下属用户帐号ID列表）
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.AccountId">
            <summary>
            主键：帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.LoginName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.NickName">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.QQ">
            <summary>
            QQ
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.Phone">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.Provice">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.AccountState">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.EndTime">
            <summary>
            截止时间
            </summary>        
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.AuthorityId">
            <summary>
            分配权限的权限ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.ParentAccountId">
            <summary>
            上级帐号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.RootAccountId">
            <summary>
            最上级帐号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.AccountType">
            <summary>
            帐号类型
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Account.HasQYAuthority">
            <summary>
            是否有企业号权限
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.Authority">
            <summary>
            权限表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Authority.AuthorityId">
            <summary>
            权限Id
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Authority.AuthorityConfig">
            <summary>
            权限配置
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Authority.AuthorityName">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Authority.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.QYCredentialId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.CorpId">
            <summary>
            微信公众号第三方用户唯一凭证
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.CorpSecret">
            <summary>
            微信公众号第三方用户唯一凭证密钥
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.NextGetTokenTime">
            <summary>
            AccessToken失效时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.EnableWeixinOauth">
            <summary>
            是否开启Oauth网页授权
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.QYCredential.AccountId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.WeistoneCredential">
            <summary>
            微讯通接口授权表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeistoneCredential.WeistoneCredentialId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeistoneCredential.AppId">
            <summary>
            微讯通第三方用户唯一凭证
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeistoneCredential.AppSecret">
            <summary>
            微讯通第三方用户唯一凭证密钥
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeistoneCredential.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.WeChatCredential">
            <summary>
            微信接口授权表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.WeChatCredentialId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.AppId">
            <summary>
            微信公众号第三方用户唯一凭证
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.AppSecret">
            <summary>
            微信公众号第三方用户唯一凭证密钥
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.AccessToken">
            <summary>
            AccessToken
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.NextGetTokenTime">
            <summary>
            AccessToken失效时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeChatCredential.EnableWeixinOauth">
            <summary>
            是否开启Oauth网页授权
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.FunctionalShow">
            <summary>
            功能插件启用表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.FunctionalShow.FunctionalShowId">
            <summary>
            序号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.FunctionalShow.FunctionStateList">
            <summary>
            开启的功能插件
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.FunctionalShow.AccountId">
            <summary>
            用户帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.FunctionalShow.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.Limit">
            <summary>
            帐号限制表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Limit.LimitId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Limit.ImageSpace">
            <summary>
            可使用图片空间（MB）
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Limit.WeixinPlatCount">
            <summary>
            可添加微信公众号个数
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Limit.AuthorityId">
            <summary>
            所属权限ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Limit.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.Resource">
            <summary>
            上传资源表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.ResourceId">
            <summary>
            主键:资源Id
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.ResourceType">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.ResourceUrl">
            <summary>
            资源路径
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.IsInnerResource">
            <summary>
            是否内部资源
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.AccountId">
            <summary>
            资源所属用户帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.Resource.ResourceName">
            <summary>
            资源别名
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Models.WeixinPlat">
            <summary>
            微信公众号表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeixinPlatId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeixinName">
            <summary>
            公众号名称
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeixinOriginalId">
            <summary>
            微信原始号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeixinNum">
            <summary>
            微信号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.PicUrl">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.Email">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.Token">
            <summary>
            微信公众号绑定Token
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.Url">
            <summary>
            微信公众号绑定Url
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeixinPlatState">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.WeiXinAccountType">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.EncodingAesKey">
            <summary>
            消息加解密密钥
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.EncryptType">
            <summary>
            消息加密模式
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.PlatType">
            <summary>
            Plat类型（0为微信公众号，1为企业号）
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Models.WeixinPlat.AgentId">
            <summary>
            应用Id
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.AccountState">
            <summary>
            用户状态
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountState.Deleted">
            <summary>
            已删除
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountState.Forbidden">
            <summary>
            禁用
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountState.OldVersion">
            <summary>
            老版本账号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountType.SystemAccountAdmin">
            <summary>
            系统管理员
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountType.WeixinAccountAdmin">
            <summary>
            公众号管理员
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AccountType.WeixinAccountUser">
            <summary>
            公众号运营人员
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.WeixinPlatState">
            <summary>
            公共平台状态
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeixinPlatState.Normal">
            <summary>
            正常
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeixinPlatState.Deleted">
            <summary>
            已删除
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeixinPlatState.Forbidden">
            <summary>
            禁用
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.ResourceType">
            <summary>
            资源类型
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.ResourceType.Img">
            <summary>
            图片
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.ResourceType.Voice">
            <summary>
            语音
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.ResourceType.Video">
            <summary>
            视频
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.OuterLinkType">
            <summary>
            外链类型，用于外链后增加OpenId参数
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.Banner">
            <summary>
            幻灯片
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.Category">
            <summary>
            微官网分类
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.CopyRight">
            <summary>
            快捷菜单
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.ServiceRelate">
            <summary>
            会员卡业务关联
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.SinglePicText">
            <summary>
            单图文
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.MultiplePicText">
            <summary>
            单图文
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.CustomeMenu">
            <summary>
            自定义菜单
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.ChannelManager">
            <summary>
            渠道管理
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.OuterLinkType.Coupon">
            <summary>
            优惠券
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeiXinAccountType.UnautherizedRss">
            <summary>
            未认证订阅号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeiXinAccountType.AutherizedRss">
            <summary>
            认证订阅号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeiXinAccountType.UnautherizedServe">
            <summary>
            未认证服务号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.WeiXinAccountType.AutherizedServe">
            <summary>
            认证服务号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AesKeyEncryptType.Cleartext">
            <summary>
            明文模式
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.AesKeyEncryptType.Security">
            <summary>
            安全模式
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.FromType">
            <summary>
            页面访问来源
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.Timeline">
            <summary>
            微信朋友圈
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.Message">
            <summary>
            微信聊天界面
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.MicroMessenger">
            <summary>
            微信浏览器
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.SingleMessage">
            <summary>
            微信聊天界面
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.GroupMessage">
            <summary>
            微信群聊天界面
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.FromType.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.UserEnable">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UserEnable.Forbidden">
            <summary>
            禁用
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UserEnable.Normal">
            <summary>
            启用
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Public.PlatType">
            <summary>
            plat类型
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.PlatType.Weixin">
            <summary>
            微信公众号
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.PlatType.QY">
            <summary>
            企业号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccessTokenOperateBll.OperatorAccessToken(Qxun.App.Weistone.Services.AccessTokenOperate,System.String,System.Object)">
            <summary>
            执行AccessToken操作
            </summary>
            <param name="operate"></param>
            <param name="plat"></param>
            <param name="accountId"></param>
            <param name="extInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.FunctionalShowBll.GetEntityByPlatIdAndAccountId(System.String,System.String)">
            <summary>
            获取用户当前微信公众号功能插件设置
            </summary>
            <param name="platId"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.FunctionalShowBll.StartOrEndFunctional(System.String,System.String,System.Boolean,System.String,Qxun.App.Weistone.ViewModels.ViewFunctionalShow)">
            <summary>
            启用或停用功能插件
            </summary>
            <param name="plat"></param>
            <param name="funcType">功能插件名称</param>
            <param name="isShow">是否显示</param>
            <param name="accountId"></param>
            <param name="entity">功能插件设置实体</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.FunctionalShowBll.GetFunctionStateListByPlatId(System.String,System.String)">
            <summary>
            获取用户当前微信公众号功能插件设置列表
            </summary>
            <param name="platId"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.HomeController.GetFirstWeixinPlat">
            <summary>
            得到有权限访问的第一个公众号/企业号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.HomeController.UpdateLog">
            <summary>
            更新日志
            </summary>
            <returns></returns>
        </member>
        <member name="T:Qxun.App.Weistone.Web.Controllers.ImageController">
            <summary>
            图片资源的外键（AccountId）为当前微信公众号的创建者的AccountId
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.ImageController.SaveNewImg(System.String,System.Boolean)">
            <summary>
            保存新图片
            </summary>
            <param name="imgPath"></param>
            <param name="isInnerResource"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.ImageController.GetImgResource(System.String)">
            <summary>
            获取图片资源
            </summary>
            <param name="imgId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.ImageController.DeleteImgResource(System.String)">
            <summary>
            删除图片资源
            </summary>
            <param name="imgId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.ImageController.GetImgResourceList(System.String,System.String)">
            <summary>
            获取图片资源列表
            </summary>
            <param name="path">图片资源子目录</param>
            <param name="order">排序规则</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.ImageController.GetDirectoryLength(System.String)">
            <summary>
            获取目录占用空间大小
            </summary>
            <param name="dirPath"></param>
            <returns>目录大小（字节数）</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.IsAccess">
            <summary>
            校验是否有权限访问手动绑定和自动绑定页面
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.GetDetailedWeixinPlat(System.String)">
            <summary>
            获得公众号详细内容
            </summary>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.WeChatOfficialAccountAutoBinding">
            <summary>
            自动绑定
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.WeChatOfficialAccountAutoBindingSubmit(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            进行自动绑定
            </summary>
            <param name="json"></param>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.GetImgCode(System.String)">
            <summary>
            获取验证码
            </summary>
            <param name="username"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.GetAesKey">
            <summary>
            生成消息加解密密钥(EncodingAESKey)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.WeChatCredentialManage">
            <summary>
            微信授权设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.GetWeChatCreadential">
            <summary>
            获取微信AppID和AppSecret
            </summary>
            <param name="plat"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.WeChatCredentialSubmit(System.String,System.String,System.Boolean)">
            <summary>
            提交微信授权设置修改
            </summary>
            <param name="plat"></param>
            <param name="appId"></param>
            <param name="secret"></param>
            <param name="enableWeixinOauth"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.WeistoneCredentialManage">
            <summary>
            微讯通开发者凭证
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.GetWeistoneCreadential">
            <summary>
            获取微讯通的AppId和AppSecret
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Web.Controllers.WeChatOfficialAccountController.RefreshWeistoneCredential">
            <summary>
            刷新微讯通开发者凭据
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Entities.SearchEntity">
            <summary>
            用于搜索的实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Entities.SearchEntity.selWhere">
            <summary>
            搜索类型
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Entities.SearchEntity.txtSearchValue">
            <summary>
            搜索的关键字
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.Exceptions.UploadFileException">
            <summary>
            上传文件异常
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Public.AutoBindingFunc.ExecuteLogin(System.String,System.String,System.String,WebHelper.HttpRequestHelper)">
            <summary>
            执行登录操作
            </summary>
            <param name="userName"></param>
            <param name="passWord"></param>
            <param name="imgCode"></param>
            <param name="helper"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.AutoBindingFunc.ExecuteGetPageInfoByUrl(System.String,WebHelper.HttpRequestHelper)">
            <summary>
            根据url获取页面信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.AutoBindingFunc.ExecuteSetUrlAndToken(WebHelper.HttpRequestHelper,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            执行设置url和token操作
            </summary>
            <param name="helper"></param>
            <param name="token">请求页面url参数</param>
            <param name="callbackUrl">服务器地址</param>
            <param name="callbackToken">令牌</param>
            <param name="encodingAesKey">消息加解密密钥</param>
            <param name="callbackEncryptMode">消息加解密方式,明文模式=0，兼容模式=1，安全模式=2</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.AutoBindingFunc.ExecuteStartDevServer(WebHelper.HttpRequestHelper,System.String)">
            <summary>
            执行开启服务器配置
            </summary>
            <param name="helper"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.AutoBindingFunc.ExecuteEditOAuthCallBackDomain(WebHelper.HttpRequestHelper,System.String,System.String)">
            <summary>
            执行修改OAuth2.0网页授权回调页面域名
            </summary>
            <param name="helper"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UrlBuilder._adminPath">
            <summary>
            Admin项目URL
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UrlBuilder._weiSitePath">
            <summary>
            WeiSite项目URL
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UrlBuilder._dynamicWeiSitePath">
            <summary>
            动态页面框架WeiSite项目URL
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Public.UrlBuilder._wechatMessagesCommunicationPath">
            <summary>
            WechatMessagesCommunication项目URL
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Public.UrlBuilder.CreateMobileUrl(System.String,System.String,System.String)">
            <summary>
            构造手机网页的URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.UrlBuilder.CreateMobileUrl(System.String,System.String)">
            <summary>
            构造手机网页的URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.UrlBuilder.GetTokenUrl(System.String)">
            <summary>
            返回Token、Url
            </summary>
            <param name="weixinPlatId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Public.UrlBuilder.GetTokenUrlQY(System.String)">
            <summary>
            企业号返回Token、Url
            </summary>
            <param name="weixinPlatId"></param>
            <returns></returns>
        </member>
        <member name="P:Qxun.App.Weistone.Public.UrlBuilder.AdminPath">
            <summary>
            Admin项目URL
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Public.UrlBuilder.WeiSitePath">
            <summary>
            WeiSite项目URL
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Public.UrlBuilder.DynamicWeiSitePath">
            <summary>
            动态页面框架WeiSite项目URL
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Public.UrlBuilder.WechatMessagesCommunicationPath">
            <summary>
            WechatMessagesCommunication项目URL
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.Login(System.String,System.String,System.Boolean)">
            <summary>
            登录
            </summary>
            <param name="loginName"></param>
            <param name="password"></param>
            <param name="isPwdMd5"> </param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.InsertAccount(Qxun.App.Weistone.ViewModels.ViewAccount)">
            <summary>
            新增用户
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.IsAccountExpired(System.String)">
            <summary>
            验证用户帐号是否已过期
            </summary>
            <param name="accountId">用户id</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetChildAccountList(System.Int32,System.Int32,System.String,System.String)">
            <summary>
            获取帐号（仅获取下级帐号的帐号）
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.SearchAccount(System.Collections.Generic.List{Qxun.App.Weistone.ViewModels.ViewAccount},System.String)">
            <summary>
            根据搜索条件筛选Account
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetAllChildrenAccountLoop(System.String)">
            <summary>
            循环获取所有的下级帐号
            </summary>
            <param name="accountId">该帐号id</param>
            <param name="totalCount">所有的下级帐号的数量</param>
            <returns>所有的下级帐号</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetChildAccountId(System.String)">
            <summary>
            得到所有的下级帐号的accountId
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.FreezeSingleAccount(System.String,System.Boolean)">
            <summary>
            冻结or解冻帐号
            </summary>
            <param name="accountId"></param>
            <param name="isFreeze"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetAccountDetails(System.String)">
            <summary>
            得到帐号的详细信息
            </summary>
            <param name="accountId">帐号Id</param>
            <returns>帐号的详细信息</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.IsAccountInRole(System.String)">
            <summary>
            是否有帐号属于该角色
            </summary>
            <param name="authorityId">角色id</param>
            <returns>是否有帐号</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.IsParentLevelAccount(System.String,System.String)">
            <summary>
            是否是上下级的帐号(一个树枝的上下级)
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetParentAccountId(System.String)">
            <summary>
            得到上级帐号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetCreateTypeByAccountId(Qxun.App.Weistone.Public.AccountType)">
            <summary>
            根据当前帐号返回可以创建的帐号类型
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetAccountTypeByAccountId(System.String)">
            <summary>
            根据accountId获取上级的可以创建的帐号类型       
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetParentAccount(System.String)">
            <summary>
            得到上级帐号
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetIdByAccountType(Qxun.App.Weistone.ViewModels.ViewAccount)">
            <summary>
            根据帐号类型返回获取公众号列表时的accountId
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.EditAccount(System.String)">
            <summary>
            修改用户信息
            </summary>
            <param name="accountJsonStr"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.ResetPassword(System.String,System.String,System.String,System.String@,System.String@)">
            <summary>
            重置密码为随机密码
            </summary>
            <param name="userName"></param>
            <param name="email"></param>        
            <param name="oldPassword">原密码</param>
            <param name="error"></param>
            <returns>新密码</returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetAllAccountId">
            <summary>
            获取Root帐号信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GenerateRandomNumber(System.Int32)">
            <summary>
            生成随机密码
            </summary>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AccountBll.GetResourceDir(System.String)">
            <summary>
            获取帐号的上传资源（图片）目录
            </summary>
            <returns></returns>
        </member>
        <member name="P:Qxun.App.Weistone.Services.AccountBll.ZeroAccountId">
            <summary>
            AccountId为0的加密后的值
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetAuthorityById(System.String)">
            <summary>
            根据id获取ViewAuthority实体
            </summary>
            <param name="id">主键ID</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetAuthorityByAccountParentId(System.String,System.String)">
            <summary>
            根据帐号的parentId获取ViewAuthority实体
            </summary>
            <param name="id">ViewAuthority实体主键ID</param>
            <param name="accountParentId">帐号的parentId</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetRoleList(System.Int32,System.Int32,System.String)">
            <summary>
            获取角色列表
            </summary>
            <param name="pageIndex">页码</param>
            <param name="pageSize">分页记录大小</param>
            <param name="accountId">账户ID</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetCurrentAccountAuthority(Qxun.App.Weistone.ViewModels.ViewAccount)">
            <summary>
            获取当前用户能够操作的权限
            </summary>
            <param name="accountEntity">AccountEntity</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.InsertOrUpdateChildAccountAuthority(Qxun.App.Weistone.ViewModels.ViewAuthority,System.String,System.String)">
            <summary>
            新增或修改用户权限
            </summary>
            <param name="authority"></param>
            <param name="authorityId"></param>
            <param name="realAccountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetRolesByAccountId(System.String)">
            <summary>
            获得该帐号所创建的角色
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.GetRolesBySubAccountId(System.String)">
            <summary>
            获得上级帐号的角色
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.IsCurrentAccountAuthority(System.String,System.String)">
            <summary>
            是否属于当前帐号的角色
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityBll.DeleteRoleById(System.String,System.String)">
            <summary>
            删除角色---里面有帐号就不能删除！！
            </summary>
            <param name="authorityId"></param>
            <returns></returns>
        </member>
        <member name="T:Qxun.App.Weistone.Services.AuthorityManageBll">
            <summary>
            反射获取所有Action和Controller的权限
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Services.AuthorityManageBll.customerAttributes">
            <summary>
            所有Action和Controller的权限列表
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Services.AuthorityManageBll.allNeedAuthorityConfigEntity">
            <summary>
            所有需要校验的权限设置信息
            </summary>
        </member>
        <member name="F:Qxun.App.Weistone.Services.AuthorityManageBll.noNeedCheckAction">
            <summary>
            不需要校验的action
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityManageBll.HasAuthorityToExecuteAction(System.String,System.String,System.String)">
            <summary>
            校验是否有权限执行该action，如果是判断controller权限，Action传空字符串
            </summary>
            <param name="authorityId"></param>
            <param name="controller"></param>
            <param name="action"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityManageBll.InitAuthority">
            <summary>
            初始化所有的权限设置
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityManageBll.GetCustomerAttribute``1(``0,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Qxun.Core.Attributes.ActionAuthorityAttribute}})">
            <summary>
            获取当前的attribute值
            </summary>
            <typeparam name="T"></typeparam>
            <param name="type"></param>
            <param name="dictionary"></param>
        </member>
        <member name="M:Qxun.App.Weistone.Services.AuthorityManageBll.GetConfigEntity(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Qxun.Core.Attributes.ActionAuthorityAttribute}})">
            <summary>
            把dictionary转化成AuthorityConfigEntity
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Services.AuthorityManageBll.Instance">
            <summary>
            全局实例
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Services.AuthorityManageBll.CustomerAttributes">
            <summary>
            所有Action和Controller的权限列表
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Services.AuthorityManageBll.AllNeedAuthorityConfigEntity">
            <summary>
            所有需要校验的权限设置信息
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.Services.AuthorityManageBll.NoNeedCheckAction">
            <summary>
            不需要校验的action
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.InsertQYCredential(System.String,Qxun.App.Weistone.ViewModels.ViewQYCredential)">
            <summary>
            新增公众账号凭证实体
            </summary>
            <param name="accountId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.UpdateQYCredential(System.String,Qxun.App.Weistone.ViewModels.ViewQYCredential)">
            <summary>
            编辑公众账号凭证
            </summary>
            <param name="accountId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.GetAccessToken(System.String)">
            <summary>
            获取token
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.ResettingAccessToken(System.String)">
            <summary>
            重置AccessToken
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.DeleteCredential(System.String,System.String)">
            <summary>
            删除授权设置
            </summary>
            <param name="id"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.QYCredentialBll.GetQYCredentialByAccountId(System.String)">
            <summary>
            根据accoutId获取授权的实体信息
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.InsertWeChatCredential(System.String,Qxun.App.Weistone.ViewModels.ViewWeChatCredential)">
            <summary>
            新增公众帐号凭证实体
            </summary>
            <param name="weixinPlatId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.UpdateWeChatCredential(System.String,Qxun.App.Weistone.ViewModels.ViewWeChatCredential)">
            <summary>
            编辑公众帐号凭证
            </summary>
            <param name="weixinPlatId"></param>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.GetAccessToken(System.String)">
            <summary>
            获取token
            </summary>
            <param name="plat"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.ResettingAccessToken(System.String)">
            <summary>
            重置AccessToken
            </summary>
            <param name="plat"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.DeleteCredential(System.String,System.String)">
            <summary>
            删除授权设置
            </summary>
            <param name="id"></param>
            <param name="platId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeChatCredentialBll.GetWeChatCredentialByPlatId(System.String)">
            <summary>
            根据PlatId获取授权的实体信息
            </summary>
            <param name="platId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.LimitBll.GetWeixinPlatLimitEntityByAccount(System.String)">
            <summary>
            获取可创建的微信平台数限制
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.LimitBll.GetImageLimitEntityByAccount(System.String)">
            <summary>
            获取可用的图片空间大小限制
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.UploadImg(System.Drawing.Image,System.String,System.String,System.String)">
            <summary>
            上传图片
            </summary>
            <param name="image"></param>
            <param name="accountId"></param>
            <param name="picName"> </param>
            <param name="catalog"> </param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.UploadFullImg(System.Drawing.Image,System.String,System.String,System.String,System.Web.HttpContext)">
            <summary>
            上传全景图
            </summary>
            <param name="image"></param>
            <param name="accountId"></param>
            <param name="picName"></param>
            <param name="catalog"></param>
            <param name="httpContext"> </param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.UploadImageGetId(System.String,System.String)">
            <summary>
            根据路径上传图片获取图片id
            </summary>
            <param name="imgStr"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.SaveImg(Qxun.App.Weistone.ViewModels.ViewResource)">
            <summary>
            保存图片
            </summary>
            <param name="resourceEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetInnerResourceEntity(System.String,System.String,Qxun.App.Weistone.Public.ResourceType)">
            <summary>
            根据资源URL获取内部资源
            </summary>
            <param name="accountId"></param>
            <param name="resourceUrl"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetResourceEntity(System.String)">
            <summary>
            获取资源
            </summary>
            <param name="resourceId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetResource(System.String)">
            <summary>
            获取资源(含图片大小)
            </summary>
            <param name="resourceId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetResourcesUrl(System.Collections.Generic.List{System.String})">
            <summary>
            根据资源ID列表获取资源的URL地址
            </summary>
            <param name="resourceIdList">资源ID列表</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetResources(System.Collections.Generic.List{System.String})">
            <summary>
            根据资源ID列表获取资源
            </summary>
            <param name="resourceIdList">资源ID列表</param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetInnerResourceEntityList(System.String,Qxun.App.Weistone.Public.ResourceType)">
            <summary>
            获取资源列表
            </summary>
            <param name="accountId"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.EditResource(Qxun.App.Weistone.ViewModels.ViewResource)">
            <summary>
            编辑图片
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.DelImgResource(System.String)">
            <summary>
            删除图片
            </summary>
            <param name="accountId"></param>
            <param name="resourceId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetSinglePicList(System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{Qxun.App.Weistone.Models.Resource,System.Boolean}},System.String)">
            <summary>
            获取资源列表信息
            </summary>
            <param name="pageSize"></param>
            <param name="totalCount"></param>
            <param name="pageIndex"></param>
            <param name="whereLambda"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.ResourceBll.GetUploadInfo(Qxun.App.Weistone.ViewModels.ViewAccount,Qxun.App.Weistone.ViewModels.ViewWeixinPlat,System.String@,System.String@)">
            <summary>
            获取上传资源的目录及所属用户ID
            </summary>
            <param name="accountSession">当前用户</param>
            <param name="weixinplatSession">当前平台</param>
            <param name="accountId">密文</param>
            <param name="catelog">明文</param>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeistoneCredentialBll.GetEntityByAppId(System.String)">
            <summary>
            根据appid获取实体
            </summary>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeistoneCredentialBll.GetEntityByPlatId(System.String)">
            <summary>
            根据appid获取实体
            </summary>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeistoneCredentialBll.IsExistAppId(System.String)">
            <summary>
            校验AppId是否合法
            </summary>
            <param name="appid"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeistoneCredentialBll.Refresh(System.String)">
            <summary>
            刷新开发者凭据
            </summary>
            <param name="platId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetWeixinList(System.String)">
            <summary>
            获取微信列表
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetWeixinAllList(System.Int32,System.Int32,System.String)">
            <summary>
            获取微信列表
            </summary>       
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetFirstWeixinPlat(Qxun.App.Weistone.ViewModels.ViewAccount)">
            <summary>
            获取有权限访问的第一个微信公众号
            </summary>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetChildWeixinList(System.Int32,System.Int32,Qxun.App.Weistone.ViewModels.ViewAccount,System.String,Qxun.App.Weistone.Public.PlatType)">
            <summary>
            获取有权限访问的微信公众号列表
            </summary>
            <param name="pageSize"></param>
            <param name="pageIndex"></param>
            <param name="account"></param>
            <param name="searchJson"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.UpdateResultResource(System.Collections.Generic.List{Qxun.App.Weistone.ViewModels.ViewWeixinPlat},System.String)">
            <summary>
            更新资源信息
            </summary>
            <param name="result"></param>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.SearchAccount(System.Collections.Generic.List{Qxun.App.Weistone.ViewModels.ViewWeixinPlat},System.String)">
            <summary>
            根据搜索条件筛选Account
            </summary>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.CanInsertWxinPlat(System.String,System.String@)">
            <summary>
            是否能够新增微信公众平台号
            </summary>
            <param name="accountId"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.InsertWplat(Qxun.App.Weistone.ViewModels.ViewWeixinPlat,System.String,Qxun.App.Weistone.Public.PlatType)">
            <summary>
            新增公共帐户
            </summary>
            <param name="entity"></param>
            <param name="accountId"> </param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.IsExist(System.String)">
            <summary>
            判断平台ID是否存在
            </summary>
            <param name="weixinPlatId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetWeixinPlatByWeixinID(System.String)">
            <summary>
            获取微信公众号详细信息
            </summary>
            <param name="weixinId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.EditWeixinEntity(Qxun.App.Weistone.ViewModels.ViewWeixinPlat,System.String)">
            <summary>
            编辑公众号
            </summary>
            <param name="weixinEntity"></param>
            <param name="weixinPlatID"> </param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.DeleteWeixinPlat(System.String)">
            <summary>
            删除公共号
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.IsCurrentUserPlatRule(System.String,System.String)">
            <summary>
            判断当前微信平台是否为当前用户
            </summary>
            <param name="userId"></param>
            <param name="weixinPlatId"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.GetDecodedWeixinPlatId(System.String)">
            <summary>
            获取解密后的微信公众号ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.IsWeixinPlatIdGreaterThan(Qxun.App.Weistone.ViewModels.ViewWeixinPlat,System.Int32)">
            <summary>
            判断是否WeixinPlatId大于指定值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Qxun.App.Weistone.Services.WeixinPlatBll.IsWeixinPlatIdGreaterThan(System.String,System.Int32)">
            <summary>
            判断是否WeixinPlatId大于指定值
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewAccount">
            <summary>
            用户帐号表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.HasAutorityAccountIds">
            <summary>
            有权限访问的帐号ID列表（含自己及下属用户帐号ID列表）
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.ParentUserName">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.AccountId">
            <summary>
            主键：帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.AuthorityId">
            <summary>
            分配权限的权限ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.ParentAccountId">
            <summary>
            上级帐号
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAccount.RootAccountId">
            <summary>
            最上级帐号
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewAuthority">
            <summary>
            权限表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAuthority.AccountName">
            <summary>
            创建者
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAuthority.AuthorityId">
            <summary>
            权限Id
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewAuthority.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewFunctionalShow">
            <summary>
            功能插件启用表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewFunctionalShow.AccountId">
            <summary>
            用户帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewFunctionalShow.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewLimit">
            <summary>
            帐号限制表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewLimit.LimitId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewLimit.AuthorityId">
            <summary>
            所属权限ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewLimit.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewQYCredential.AccountId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewResource">
            <summary>
            上传资源表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewResource.ImgSize">
            <summary>
            图片大小（byte）
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewResource.ResourceId">
            <summary>
            主键:资源Id
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewResource.AccountId">
            <summary>
            资源所属用户帐号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewWeChatCredential">
            <summary>
            微信接口授权表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeChatCredential.WeChatCredentialId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeChatCredential.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewWeistoneCredential">
            <summary>
            微讯通接口授权表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeistoneCredential.WeistoneCredentialId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeistoneCredential.WeixinPlatId">
            <summary>
            微信公众号ID
            </summary>
        </member>
        <member name="T:Qxun.App.Weistone.ViewModels.ViewWeixinPlat">
            <summary>
            微信公众号表视图实体
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeixinPlat.AccountLoginName">
            <summary>
            微信公众号的创建者
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeixinPlat.WeixinPlatId">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeixinPlat.AccountId">
            <summary>
            创建者帐号ID
            </summary>
        </member>
        <member name="P:Qxun.App.Weistone.ViewModels.ViewWeixinPlat.PicUrl">
            <summary>
            头像
            </summary>
        </member>
    </members>
</doc>
